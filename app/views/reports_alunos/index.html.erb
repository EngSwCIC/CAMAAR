<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Formulários</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #f0f0f0;
        }
        h1 {
            color: black;
            margin-bottom: 20px;
            font-size: 2.5em;
        }
        #search-bar {
            margin-bottom: 20px;
            width: 100%;
            max-width: 1400px;
            display: flex;
            justify-content: center;
        }
        #search-input {
            width: 100%;
            max-width: 500px;
            padding: 10px;
            font-size: 16px;
            border: none;
            border-bottom: 2px solid #ff4500;
            border-radius: 0;
            background-color: transparent;
            outline: none;
            transition: border-bottom 0.3s;
        }
        #search-input:focus {
            border-bottom: 2px solid #8b0000;
        }
        #buttons-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            width: 100%;
            max-width: 1400px;
        }
        .button {
            padding: 20px;
            background-color: #ffffff;
            color: #ff4500;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
            font-size: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: 0.5s;
        }
        .button .value1 {
            font-size: 24px;
            font-weight: bold;
        }
        .button .value2,
        .button .value3 {
            font-size: 16px;
            color: #555;
        }
        .button:hover {
            background-color: #ff4500;
            color: #ffffff;
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        }
        .button-create-template {
            background-color: #4b0082;
            color: white;
            border-radius: 50%;
            cursor: pointer;
            font-size: 30px;
            margin-bottom: 20px;
            width: 60px;
            height: 60px;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: 0.5s;
            border: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .button-create-template:hover {
            background-color: #8b0000;
            transform: scale(1.2);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
            padding-top: 60px;
        }
        .modal-content {
            background-color: #ffffff;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            border-radius: 10px;
            width: 80%;
            max-width: 1400px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            text-align: left;
        }
        .close {
            color: red;
            float: right;
            font-size: 35px;
            font-weight: bold;
            margin-right: auto;
        }
        .close:hover,
        .close:focus {
            color: darkred;
            text-decoration: none;
            cursor: pointer;
        }
        .question {
            margin-bottom: 20px;
        }
        .question p {
            margin: 0;
            padding: 0;
            font-size: 18px;
            font-weight: bold;
        }
        .question label {
            display: block;
            margin: 5px 0;
            font-size: 16px;
        }
        .question input[type="text"] {
            width: 100%;
            padding: 8px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-top: 5px;
        }
        .informationModal {
            text-align: center;
        }
        
        .SubmitButton {
          margin: auto;
          background-color: #00ff3c;
          color: #ffffff;
          width: 200px;
          padding: 10px 20px;
          border: none;
          border-radius: 25px;
          cursor: pointer;
          font-size: 16px;
          transition: all 0.5s;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .SubmitButton:hover {
          background-color: #00cc32;
          box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
          transform: translateY(-2px);
          width: 250px;
        }

        .SubmitButton:active {
          background-color: #00b12d;
          transform: translateY(0);
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
    </style>
</head>
<body>
    <h1>Formulários</h1>
    <div id="search-bar">
        <input type="text" id="search-input" onkeyup="searchForms()" placeholder="Pesquisar formulários...">
    </div>
    <div id="buttons-container">
        <% @formularios.each do |formulario| %>
            <% parts = formulario.split('.json')[0].split('-') %>
            <div class="button" onclick="openModal('<%= formulario %>')" data-name="<%= formulario %>">
                <div class="value1"><%= parts[0] %></div>
                <div class="value2">Professor: <%= parts[1] %></div>
                <div class="value3">Semestre: <%= parts[2] %></div>
            </div>
        <% end %>
    </div>

    <!-- Modal -->
    <div id="modal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <div id="modal-body"></div>
            <button class="SubmitButton" onclick="submitForm()"><strong>Enviar Formulário</strong></button>
        </div>
    </div>

    <script>
        function searchForms() {
            let input, filter, buttons, button, i, txtValue;
            input = document.getElementById('search-input');
            filter = input.value.toUpperCase();
            buttons = document.getElementById("buttons-container").getElementsByClassName('button');
            for (i = 0; i < buttons.length; i++) {
                button = buttons[i];
                txtValue = button.textContent || button.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    buttons[i].style.display = "";
                } else {
                    buttons[i].style.display = "none";
                }
            }
        }

        function openModal(formulario) {
            fetch(`/fetch_form?file_name=${formulario}`)
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    alert(data.error);
                    return;
                }
                const modalBody = document.getElementById('modal-body');
                modalBody.innerHTML = `
                    <h2 class="informationModal">${data.name}</h2>
                    <p class="informationModal"><strong>Professor:</strong> ${data.professor}</p>
                    <p class="informationModal"><strong>Semestre:</strong> ${data.semester}</p><br>
                    ${data.questions.map((q, index) => {
                        if (q.type === 'checkbox') {
                            return `
                                <div class="question">
                                    <p>${index + 1}. ${q.question}</p>
                                    ${q.options.map(option => `
                                        <label>
                                            <input type="radio" name="question${index}" value="${option}">
                                            ${option}
                                        </label>
                                    `).join('')}
                                </div>
                            `;
                        } else if (q.type === 'text') {
                            return `
                                <div class="question">
                                    <p>${index + 1}. ${q.question}</p>
                                    <input type="text" name="question${index}" placeholder="Escreva sua resposta aqui">
                                </div>
                            `;
                        }
                    }).join('')}
                `;
                document.getElementById('modal').style.display = "block";
            })
            .catch(error => console.error('Error:', error));
        }

        function closeModal() {
            document.getElementById('modal').style.display = "none";
        }

        function submitForm() {
    const formData = {};
    const modalBody = document.getElementById('modal-body');
    const formName = modalBody.querySelector('.informationModal').textContent;
    const professor = modalBody.querySelector('p:nth-child(2)').textContent.split(': ')[1];
    const semester = modalBody.querySelector('p:nth-child(3)').textContent.split(': ')[1];

    // Coletar as respostas do formulário
    const questions = document.querySelectorAll('.question');
    questions.forEach((question, index) => {
        const input = question.querySelector('input[type="text"], input[type="radio"]:checked');
        if (input) {
            formData[`question${index + 1}`] = input.value;
        }
    });

    // Criar um nome único para o arquivo de resposta
    const fileName = `response_${new Date().toISOString().replace(/[:.]/g, '-')}.json`;

    // Enviar os dados do formulário para o servidor
    fetch('/submit_form', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            fileName: fileName,
            data: formData,
            formName: formName,
            professor: professor,
            semester: semester
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Formulário enviado com sucesso!');
        } else {
            alert('Erro ao enviar formulário: ' + data.error);
        }
        closeModal();
    })
    .catch(error => console.error('Error:', error));
}
    </script>
</body>
</html>
