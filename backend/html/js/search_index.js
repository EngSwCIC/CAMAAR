var search_data = {"index":{"searchIndex":["applicationcable","channel","connection","applicationcontroller","applicationjob","applicationmailer","applicationrecord","applicationservice","backend","application","cclass","cclassescontroller","enrollment","jwtdenylist","likertscaleanswer","likertscalequestion","materiacontroller","member","memberscontroller","questionanswer","questionoption","questiontype","role","scrappercontroller","sigaamanager","classcollector","classextractor","subject","subjectscontroller","survey","surveyanswer","surveyquestion","surveyscontroller","templatecontroller","user","users","registrationscontroller","sessionscontroller","userscontroller","as_json()","as_json()","as_json()","cadastraparticipante()","cadastraparticipantes()","call()","call()","call()","create()","create()","destroy()","extract_class()","extract_classes()","get_class_info()","get_classes_info()","get_user_from_token()","index()","index()","index()","index()","index()","index()","is_expired?()","json()","log_out_failure()","log_out_success()","login_sigga()","materia_params()","open()","parse_discente()","parse_docente()","register_failed()","register_failed()","register_success()","register_success()","respond_to_on_destroy()","respond_with()","respond_with()","respond_with()","set_materia()","set_survey()","set_surveys()","show()","show()","show()","show()","show()","show()","show()","update()"],"longSearchIndex":["applicationcable","applicationcable::channel","applicationcable::connection","applicationcontroller","applicationjob","applicationmailer","applicationrecord","applicationservice","backend","backend::application","cclass","cclassescontroller","enrollment","jwtdenylist","likertscaleanswer","likertscalequestion","materiacontroller","member","memberscontroller","questionanswer","questionoption","questiontype","role","scrappercontroller","sigaamanager","sigaamanager::classcollector","sigaamanager::classextractor","subject","subjectscontroller","survey","surveyanswer","surveyquestion","surveyscontroller","templatecontroller","user","users","users::registrationscontroller","users::sessionscontroller","userscontroller","survey#as_json()","surveyanswer#as_json()","surveyquestion#as_json()","scrappercontroller#cadastraparticipante()","scrappercontroller#cadastraparticipantes()","applicationservice::call()","sigaamanager::classcollector#call()","sigaamanager::classextractor#call()","materiacontroller#create()","userscontroller#create()","materiacontroller#destroy()","sigaamanager::classextractor#extract_class()","sigaamanager::classextractor#extract_classes()","sigaamanager::classcollector#get_class_info()","sigaamanager::classcollector#get_classes_info()","templatecontroller#get_user_from_token()","cclassescontroller#index()","materiacontroller#index()","memberscontroller#index()","scrappercontroller#index()","subjectscontroller#index()","surveyscontroller#index()","survey#is_expired?()","userscontroller#json()","users::sessionscontroller#log_out_failure()","users::sessionscontroller#log_out_success()","sigaamanager::classcollector#login_sigga()","materiacontroller#materia_params()","surveyscontroller#open()","sigaamanager::classextractor#parse_discente()","sigaamanager::classextractor#parse_docente()","users::registrationscontroller#register_failed()","userscontroller#register_failed()","users::registrationscontroller#register_success()","userscontroller#register_success()","users::sessionscontroller#respond_to_on_destroy()","users::registrationscontroller#respond_with()","users::sessionscontroller#respond_with()","userscontroller#respond_with()","materiacontroller#set_materia()","surveyscontroller#set_survey()","surveyscontroller#set_surveys()","cclassescontroller#show()","materiacontroller#show()","memberscontroller#show()","scrappercontroller#show()","subjectscontroller#show()","surveyscontroller#show()","templatecontroller#show()","materiacontroller#update()"],"info":[["ApplicationCable","","ApplicationCable.html","",""],["ApplicationCable::Channel","","ApplicationCable/Channel.html","",""],["ApplicationCable::Connection","","ApplicationCable/Connection.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["ApplicationRecord","","ApplicationRecord.html","",""],["ApplicationService","","ApplicationService.html","","<p>A classe ApplicationService é responsável por abstrair o comportamento de executar um funcionalidade …\n"],["Backend","","Backend.html","",""],["Backend::Application","","Backend/Application.html","",""],["Cclass","","Cclass.html","",""],["CclassesController","","CclassesController.html","","<p>Classe Controller que define as ações capazes de serem feitas para manipular um Cclass por meio da aplicação …\n"],["Enrollment","","Enrollment.html","",""],["JwtDenylist","","JwtDenylist.html","",""],["LikertScaleAnswer","","LikertScaleAnswer.html","",""],["LikertScaleQuestion","","LikertScaleQuestion.html","",""],["MateriaController","","MateriaController.html","",""],["Member","","Member.html","",""],["MembersController","","MembersController.html","",""],["QuestionAnswer","","QuestionAnswer.html","","<p>Essa classe representa o model ActiveRecord que armazena respostas às perguntas de Survey para cada par …\n"],["QuestionOption","","QuestionOption.html","","<p>Essa classe representa o model ActiveRecord que armazena possíveis respostas para um SurveyQuestion do …\n"],["QuestionType","","QuestionType.html","",""],["Role","","Role.html","",""],["ScrapperController","","ScrapperController.html","","<p>Esta classe é responsavel por fazer o intermédio entre o scrapper e o frontend, bem como o cadastro das …\n"],["SigaaManager","","SigaaManager.html","","<p>Módulo responsável por realizar operações referentes ao SIGAA\n"],["SigaaManager::ClassCollector","","SigaaManager/ClassCollector.html","",""],["SigaaManager::ClassExtractor","","SigaaManager/ClassExtractor.html","","<p>A classe ClassExtractor é responsável por extrair as informações de uma ou mais turmas presentes no  …\n"],["Subject","","Subject.html","",""],["SubjectsController","","SubjectsController.html","",""],["Survey","","Survey.html","","<p>Essa classe representa o model ActiveRecord que armazena o questionário que será  respondido pelos membros …\n"],["SurveyAnswer","","SurveyAnswer.html","",""],["SurveyQuestion","","SurveyQuestion.html","","<p>Essa classe representa o model ActiveRecord que armazena pergunta do Survey  que será utilizada para …\n"],["SurveysController","","SurveysController.html","","<p>Classe Controller que define as ações capazes de serem feitas para manipular um Survey por meio da aplicação …\n"],["TemplateController","","TemplateController.html","",""],["User","","User.html","",""],["Users","","Users.html","",""],["Users::RegistrationsController","","Users/RegistrationsController.html","",""],["Users::SessionsController","","Users/SessionsController.html","",""],["UsersController","","UsersController.html","","<p>Classe da controler do cadastro de usuarios\n"],["as_json","Survey","Survey.html#method-i-as_json","(options: {})",""],["as_json","SurveyAnswer","SurveyAnswer.html#method-i-as_json","(options: {})",""],["as_json","SurveyQuestion","SurveyQuestion.html#method-i-as_json","(options: {})",""],["cadastraParticipante","ScrapperController","ScrapperController.html#method-i-cadastraParticipante","(discente, turma)","<p>Cadastra os participantes importados no banco de dados\n"],["cadastraParticipantes","ScrapperController","ScrapperController.html#method-i-cadastraParticipantes","(participantes, turma)","<p>Cadastra as informações das turmas importadas do sigaa no banco de dados\n"],["call","ApplicationService","ApplicationService.html#method-c-call","(params = {})","<p>Método utilzado para executar uma determinada funcionalidade\n<p>Attributes\n<p><code>params</code> - <code>Hash</code> de parametros necessários …\n"],["call","SigaaManager::ClassCollector","SigaaManager/ClassCollector.html#method-i-call","(params)",""],["call","SigaaManager::ClassExtractor","SigaaManager/ClassExtractor.html#method-i-call","(params)","<p>Método utilzado para executar o serviço de extrair informações das turmas presentes no SIGAA\n<p>Attributes …\n"],["create","MateriaController","MateriaController.html#method-i-create","()","<p>POST /materia\n"],["create","UsersController","UsersController.html#method-i-create","()","<p>Construtor da classe\n<p>Recebe os dados para realizar a consulta no banco de dados. Caso exista o membro, …\n"],["destroy","MateriaController","MateriaController.html#method-i-destroy","()","<p>DELETE /materia/1\n"],["extract_class","SigaaManager::ClassExtractor","SigaaManager/ClassExtractor.html#method-i-extract_class","(class_info, browser)","<p>Retorna <code>Hash</code> contendo informações sobre as turmas fornecidas no argumento <code>selected_classes</code>\n<p>Attributes …\n"],["extract_classes","SigaaManager::ClassExtractor","SigaaManager/ClassExtractor.html#method-i-extract_classes","(selected_classes, browser)","<p>Retorna um <code>Array</code> de objetos do tipo <code>Hash</code> contendo informações sobre as turmas fornecidas no argumento …\n"],["get_class_info","SigaaManager::ClassCollector","SigaaManager/ClassCollector.html#method-i-get_class_info","(browser)",""],["get_classes_info","SigaaManager::ClassCollector","SigaaManager/ClassCollector.html#method-i-get_classes_info","(browser)",""],["get_user_from_token","TemplateController","TemplateController.html#method-i-get_user_from_token","()","<p>Funcao para decodificar o JWT\n"],["index","CclassesController","CclassesController.html#method-i-index","()","<p>Método que renderiza as <code>CClasses</code> de um membro cujo <code>id</code> foi passado por parâmetro (<code>params</code>).\n<p>Caso o membro …\n"],["index","MateriaController","MateriaController.html#method-i-index","()","<p>GET /materia\n"],["index","MembersController","MembersController.html#method-i-index","()",""],["index","ScrapperController","ScrapperController.html#method-i-index","()","<p>Extrai informações das turmas do SIGAA através do scrapper\n<p>Caso não recebe nada para importar ele entende …\n"],["index","SubjectsController","SubjectsController.html#method-i-index","()",""],["index","SurveysController","SurveysController.html#method-i-index","()","<p>Método que renderiza todos os <code>Surveys</code> armazenados no banco de dados\n<p>Responde renderizando uma resposta …\n"],["is_expired?","Survey","Survey.html#method-i-is_expired-3F","()","<p>Método que verifica se a um <code>Survey</code> está fora da validade.\n<p>Retorna <code>true</code> caso <code>expiration_date</code> seja <em>menor</em> …\n"],["json","UsersController","UsersController.html#method-i-json","","<p>Metodo respond_with\n<p>Responsavel por decidir qual qual valor de user retornar e qual mensagem deve ser …\n"],["log_out_failure","Users::SessionsController","Users/SessionsController.html#method-i-log_out_failure","()",""],["log_out_success","Users::SessionsController","Users/SessionsController.html#method-i-log_out_success","()",""],["login_sigga","SigaaManager::ClassCollector","SigaaManager/ClassCollector.html#method-i-login_sigga","()","<p>Retorna uma instância da classe <code>Watir::Browser</code> em que o browser já se encontra na página inicial do aluno …\n"],["materia_params","MateriaController","MateriaController.html#method-i-materia_params","()","<p>Only allow a list of trusted parameters through.\n"],["open","SurveysController","SurveysController.html#method-i-open","()","<p>Método que renderiza todos os+Surveys+ armazenados no banco de dados que não estão expirados\n<p>Responde …\n"],["parse_discente","SigaaManager::ClassExtractor","SigaaManager/ClassExtractor.html#method-i-parse_discente","(text)","<p>Retorna <code>Hash</code> contendo informações sobre um discente a partir de seu texto de descrição no SIGAA \n<p>Attributes …\n"],["parse_docente","SigaaManager::ClassExtractor","SigaaManager/ClassExtractor.html#method-i-parse_docente","(text)","<p>Retorna <code>Hash</code> contendo informações sobre um docente a partir de seu texto de descrição no SIGAA \n<p>Attributes …\n"],["register_failed","Users::RegistrationsController","Users/RegistrationsController.html#method-i-register_failed","()",""],["register_failed","UsersController","UsersController.html#method-i-register_failed","(resource)","<p>Metodo register_failed\n<p>Responsavel por retornar os dados de um registro mal  sucedido\n<p>Parametros: resource, …\n"],["register_success","Users::RegistrationsController","Users/RegistrationsController.html#method-i-register_success","()",""],["register_success","UsersController","UsersController.html#method-i-register_success","(resource)","<p>Metodo register_success\n<p>Responsavel por retornar os dados de um registro bem  sucedido\n<p>Parametros: resource, …\n"],["respond_to_on_destroy","Users::SessionsController","Users/SessionsController.html#method-i-respond_to_on_destroy","()",""],["respond_with","Users::RegistrationsController","Users/RegistrationsController.html#method-i-respond_with","(resource, _opts = {})",""],["respond_with","Users::SessionsController","Users/SessionsController.html#method-i-respond_with","(_resource, _opts = {})",""],["respond_with","UsersController","UsersController.html#method-i-respond_with","(resource)",""],["set_materia","MateriaController","MateriaController.html#method-i-set_materia","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_survey","SurveysController","SurveysController.html#method-i-set_survey","()","<p>Método que armazena <code>Surveys</code> cujo <code>id</code> foi recebido via parâmetros na variável de class +@survey+\n"],["set_surveys","SurveysController","SurveysController.html#method-i-set_surveys","()","<p>Método que armazena todos os <code>Surveys</code> na variável de class +@surveys+\n"],["show","CclassesController","CclassesController.html#method-i-show","()",""],["show","MateriaController","MateriaController.html#method-i-show","()","<p>GET /materia/1\n"],["show","MembersController","MembersController.html#method-i-show","()",""],["show","ScrapperController","ScrapperController.html#method-i-show","()","<p>Importa as informações das turmas disponíveis para o scrapper\n<p>Retorna as informações das turmas como  …\n"],["show","SubjectsController","SubjectsController.html#method-i-show","()",""],["show","SurveysController","SurveysController.html#method-i-show","(status = nil)","<p>Método que renderiza um <code>Survey</code> cujo <code>id</code> foi passado por parâmetro (<code>params[:id]</code>).\n<p>Responde renderizando …\n"],["show","TemplateController","TemplateController.html#method-i-show","()",""],["update","MateriaController","MateriaController.html#method-i-update","()","<p>PATCH/PUT /materia/1\n"]]}}